<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CONSUCOOP - Gestión de Solicitudes</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <header>
    <nav class="navbar navbar-expand-lg navbar-institucional">
      <div class="container">
        <div class="d-flex align-items-center">
          <img src="/images/logo-consucoop.png" alt="CONSUCOOP Logo" class="logo-header">
          <a class="navbar-brand" href="/" arial="Sistema de Gestión de Solicitudes">
            <div class="navbar-brand-text">
              <span>Sistema de Gestión de Solicitudes</span>
            </div>
          </a>
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav ms-auto">
            <li class="nav-item">
              <a class="nav-link" href="/aprobacion" data-bs-toggle="tooltip" title="Aprobación de solicitudes por jefe"><i class="bi bi-person-gear me-1"></i>Aprobación Jefe</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/aprobacion-RH" data-bs-toggle="tooltip" title="Gestión de solicitudes por RRHH"><i class="bi bi-people-fill me-1"></i>RRHH</a>
            </li>
            <li class="nav-item d-flex align-items-center ms-2">
              <div class="user-avatar">
                <i class="bi bi-person-fill"></i>
              </div>
              <span class="text-white d-none d-md-inline" aria-label="Usuario actual"><%= usuario %></span>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  </header>

  <main class="container my-3">
    <section class="page-header" aria-labelledby="page-title">
      <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
          <h1 id="page-title" class="h3 mb-1">
            <i class="bi bi-list-task me-2"></i>Gestión de Solicitudes
          </h1>
          <p class="mb-0 text-muted">Administra y realiza un seguimiento de todas tus solicitudes</p>
        </div>
        <div class="header-actions d-flex gap-2 flex-wrap">
          <button class="btn btn-institucional" data-bs-toggle="modal" data-bs-target="#solicitudModal" data-bs-toggle="tooltip" title="Solicitar días de vacaciones" aria-label="Nueva solicitud de vacaciones">
            <i class="bi bi-calendar-plus me-1"></i>Vacaciones
          </button>
          <a href="/permisos" class="btn btn-outline-institucional" data-bs-toggle="tooltip" title="Solicitar un permiso laboral" aria-label="Solicitar permisos">
            <i class="bi bi-file-earmark-check me-1"></i>Permisos
          </a>
          <a href="/vehiculos" class="btn btn-outline-institucional" data-bs-toggle="tooltip" title="Solicitar uso de un vehículo" aria-label="Solicitar vehículos">
            <i class="bi bi-car-front me-1"></i>Vehículos
          </a>
        </div>
      </div>
    </section>

    <!-- Estadísticas Rápidas -->
    <div class="quick-stats">
      <div class="stat-card">
        <i class="bi bi-hourglass"></i>
        <h3><%= solicitudes.filter(s => s.estado === 'Pendiente').length %></h3>
        <p>Pendientes</p>
      </div>
      <div class="stat-card">
        <i class="bi bi-check-circle"></i>
        <h3><%= solicitudes.filter(s => s.estado === 'Aprobado').length %></h3>
        <p>Aprobadas</p>
      </div>
      <div class="stat-card">
        <i class="bi bi-x-circle"></i>
        <h3><%= solicitudes.filter(s => s.estado === 'Rechazado').length %></h3>
        <p>Rechazadas</p>
      </div>
      <div class="stat-card">
        <i class="bi bi-calendar-check"></i>
        <h3><%= diasDisponibles ? diasDisponibles.total : '0' %></h3>
        <p>Días Disponibles</p>
      </div>
    </div>

    <section class="card" aria-labelledby="solicitudes-title">
      <div class="card-header d-flex justify-content-between align-items-center p-0">
        <ul class="nav nav-tabs" id="indexTabs" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="pendientes-tab" data-bs-toggle="tab" data-bs-target="#pendientes" type="button" role="tab" aria-controls="pendientes" aria-selected="true">
              <i class="bi bi-hourglass me-1"></i>Pendientes
              <span class="badge bg-primary rounded-pill ms-1"><%= solicitudes.filter(s => s.estado === 'Pendiente').length %></span>
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="historico-tab" data-bs-toggle="tab" data-bs-target="#historico" type="button" role="tab" aria-controls="historico" aria-selected="false">
              <i class="bi bi-archive me-1"></i>Histórico
              <span class="badge bg-secondary rounded-pill ms-1"><%= solicitudes.filter(s => s.estado !== 'Pendiente').length %></span>
            </button>
          </li>
        </ul>
        <div class="d-flex align-items-center pe-3">
          <div class="tab-export-btn active" id="pendientes-export">
            <a href="/export-index?type=pendientes" class="btn btn-sm btn-outline-institucional" data-bs-toggle="tooltip" title="Descargar lista de solicitudes pendientes" aria-label="Exportar solicitudes pendientes">
              <i class="bi bi-download me-1"></i>Exportar
            </a>
          </div>
          <div class="tab-export-btn" id="historico-export">
            <div class="d-flex gap-2">
              <div class="search-box">
                <i class="bi bi-search"></i>
                <input type="text" class="form-control form-control-sm" id="searchHistorico" placeholder="Buscar en histórico..." aria-label="Buscar en histórico">
              </div>
              <div class="dropdown">
                <button class="btn btn-sm btn-outline-institucional dropdown-toggle" type="button" id="filtroEstado" data-bs-toggle="dropdown" data-bs-toggle="tooltip" title="Filtrar solicitudes por estado" aria-expanded="false">
                  <i class="bi bi-funnel me-1"></i>Filtrar
                </button>
                <ul class="dropdown-menu" aria-labelledby="filtroEstado">
                  <li><a class="dropdown-item" href="#" data-filter="all">Todos</a></li>
                  <li><hr class="dropdown-divider"></li>
                  <li><a class="dropdown-item" href="#" data-filter="Aprobado"><span class="badge bg-success me-2">A</span>Aprobados</a></li>
                  <li><a class="dropdown-item" href="#" data-filter="Rechazado"><span class="badge bg-danger me-2">R</span>Rechazados</a></li>
                </ul>
              </div>
              <a href="/export-index?type=historico" class="btn btn-sm btn-outline-institucional" id="export-historico" data-bs-toggle="tooltip" title="Descargar lista de solicitudes históricas" aria-label="Exportar solicitudes históricas">
                <i class="bi bi-download me-1"></i>Exportar
              </a>
            </div>
          </div>
        </div>
      </div>
      <div class="card-body tab-content" id="indexTabContent">
        <div class="tab-pane fade show active" id="pendientes" role="tabpanel" aria-labelledby="pendientes-tab">
          <div class="table-responsive">
            <table class="table table-hover align-middle mb-0" aria-label="Tabla de solicitudes pendientes">
              <thead>
                <tr>
                  <th scope="col">Solicitante</th>
                  <th scope="col">Área</th>
                  <th scope="col">Fecha</th>
                  <th scope="col">Periodo</th>
                  <th scope="col">Días</th>
                  <th scope="col">Estado</th>
                  <th scope="col" class="text-end">Acciones</th>
                </tr>
              </thead>
              <tbody>
                <% if (solicitudes && solicitudes.filter(s => s.estado === 'Pendiente').length > 0) { %>
                  <% solicitudes.filter(s => s.estado === 'Pendiente').sort((a, b) => new Date(b.fecha_solicitud) - new Date(a.fecha_solicitud)).forEach(solicitud => { %>
                    <tr>
                      <td>
                        <div class="d-flex align-items-center">
                          <div class="user-avatar small">
                            <i class="bi bi-person-fill"></i>
                          </div>
                          <div>
                            <span class="fw-medium"><%= solicitud.nombre || 'No disponible' %></span>
                            <div class="text-muted small"><%= solicitud.area_solicitante || '-' %></div>
                          </div>
                        </div>
                      </td>
                      <td><span class="badge bg-secondary bg-opacity-10 text-secondary"><%= solicitud.area_solicitante || '-' %></span></td>
                      <td><%= solicitud.fecha_solicitud ? new Date(solicitud.fecha_solicitud).toLocaleDateString('es-ES') : '-' %></td>
                      <td>
                        <div class="d-flex flex-column">
                          <span><%= solicitud.fecha_inicio ? new Date(solicitud.fecha_inicio).toLocaleDateString('es-ES') : '-' %></span>
                          <span class="text-muted small">al <%= solicitud.fecha_fin ? new Date(solicitud.fecha_fin).toLocaleDateString('es-ES') : '-' %></span>
                        </div>
                      </td>
                      <td><span class="badge bg-primary bg-opacity-10 text-primary"><%= solicitud.total_dias || 0 %> días</span></td>
                      <td><span class="badge badge-warning"><i class="bi bi-clock-history me-1"></i><%= solicitud.estado || 'Pendiente' %></span></td>
                      <td class="text-end">
                        <div class="action-buttons">
                          <button class="btn btn-sm btn-outline-primary detalles-btn" data-id="<%= solicitud.id %>" data-bs-toggle="modal" data-bs-target="#detallesModal" data-bs-toggle="tooltip" title="Ver detalles de esta solicitud" aria-label="Ver detalles de la solicitud">
                            <i class="bi bi-eye-fill" aria-hidden="true"></i>
                          </button>
                          <button class="btn btn-sm btn-outline-danger cancelar-btn" data-id="<%= solicitud.id %>" data-bs-toggle="tooltip" title="Cancelar esta solicitud" aria-label="Cancelar solicitud">
                            <i class="bi bi-x-circle-fill" aria-hidden="true"></i>
                          </button>
                        </div>
                      </td>
                    </tr>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="7" class="text-center empty-message">
                      <i class="bi bi-inbox fs-1 text-muted" aria-hidden="true"></i>
                      <p class="mt-2 text-muted">No hay solicitudes pendientes en este momento</p>
                      <button class="btn btn-institucional mt-2" data-bs-toggle="modal" data-bs-target="#solicitudModal">
                        <i class="bi bi-plus-circle me-1"></i>Crear nueva solicitud
                      </button>
                    </td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
        <div class="tab-pane fade" id="historico" role="tabpanel" aria-labelledby="historico-tab">
          <div class="table-responsive">
            <table class="table table-hover align-middle mb-0" id="historico-table" aria-label="Tabla de solicitudes históricas">
              <thead>
                <tr>
                  <th scope="col">Solicitante</th>
                  <th scope="col">Fecha</th>
                  <th scope="col">Periodo</th>
                  <th scope="col">Días</th>
                  <th scope="col">Estado</th>
                  <th scope="col" class="text-end">Acciones</th>
                </tr>
              </thead>
              <tbody>
                <% if (solicitudes && solicitudes.filter(s => s.estado !== 'Pendiente').length > 0) { %>
                  <% solicitudes.filter(s => s.estado !== 'Pendiente').sort((a, b) => new Date(b.fecha_solicitud) - new Date(a.fecha_solicitud)).forEach(solicitud => { %>
                    <tr data-estado="<%= solicitud.estado %>" data-search="<%= solicitud.nombre.toLowerCase() %> <%= solicitud.area_solicitante.toLowerCase() %> <%= solicitud.estado.toLowerCase() %>">
                      <td>
                        <div class="d-flex align-items-center">
                          <div class="user-avatar small">
                            <i class="bi bi-person-fill"></i>
                          </div>
                          <div>
                            <span class="fw-medium"><%= solicitud.nombre || 'No disponible' %></span>
                            <div class="text-muted small"><%= solicitud.area_solicitante || '-' %></div>
                          </div>
                        </div>
                      </td>
                      <td><%= solicitud.fecha_solicitud ? new Date(solicitud.fecha_solicitud).toLocaleDateString('es-ES') : '-' %></td>
                      <td>
                        <div class="d-flex flex-column">
                          <span><%= solicitud.fecha_inicio ? new Date(solicitud.fecha_inicio).toLocaleDateString('es-ES') : '-' %></span>
                          <span class="text-muted small">al <%= solicitud.fecha_fin ? new Date(solicitud.fecha_fin).toLocaleDateString('es-ES') : '-' %></span>
                        </div>
                      </td>
                      <td><span class="badge bg-primary bg-opacity-10 text-primary"><%= solicitud.total_dias || 0 %> días</span></td>
                      <td>
                        <% if (solicitud.estado === 'Aprobado') { %>
                          <span class="badge badge-success"><i class="bi bi-check-circle me-1"></i>Aprobado</span>
                        <% } else if (solicitud.estado === 'Rechazado') { %>
                          <span class="badge badge-danger"><i class="bi bi-x-circle me-1"></i>Rechazado</span>
                        <% } else { %>
                          <span class="badge badge-info"><i class="bi bi-info-circle me-1"></i><%= solicitud.estado || 'Desconocido' %></span>
                        <% } %>
                      </td>
                      <td class="text-end">
                        <button class="btn btn-sm btn-outline-primary detalles-btn" data-id="<%= solicitud.id %>" data-bs-toggle="modal" data-bs-target="#detallesModal" data-bs-toggle="tooltip" title="Ver detalles de esta solicitud" aria-label="Ver detalles de la solicitud">
                          <i class="bi bi-eye-fill" aria-hidden="true"></i>
                        </button>
                        <% if (solicitud.estado === 'Aprobado') { %>
                          <button class="btn btn-sm  pdf-btn" data-id="<%= solicitud.id %>" data-bs-toggle="tooltip" title="Descargar comprobante en PDF" aria-label="Descargar PDF">
                            <i class="bi bi-file-pdf-fill" aria-hidden="true"></i>
                          </button>
                        <% } %>
                      </td>
                    </tr>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="6" class="text-center empty-message">
                      <i class="bi bi-archive fs-1 text-muted" aria-hidden="true"></i>
                      <p class="mt-2 text-muted">No hay solicitudes registradas en el histórico</p>
                      <button class="btn btn-institucional mt-2" data-bs-toggle="modal" data-bs-target="#solicitudModal">
                        <i class="bi bi-plus-circle me-1"></i>Crear nueva solicitud
                      </button>
                    </td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </section>

    <!-- Botón Flotante -->
    <a href="#" class="floating-action-btn d-lg-none" data-bs-toggle="modal" data-bs-target="#solicitudModal" aria-label="Nueva solicitud">
      <i class="bi bi-plus"></i>
    </a>

    <!-- Modal de Nueva Solicitud -->
    <div class="modal fade" id="solicitudModal" tabindex="-1" aria-labelledby="solicitudModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="solicitudModalLabel"><i class="bi bi-calendar-plus me-2"></i>Nueva Solicitud de Vacaciones</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
          </div>
          <div class="modal-body">
            <form id="vacacionesForm" aria-describedby="formInstructions">
              <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>Complete los campos para solicitar sus vacaciones. Los campos con <span class="text-danger">*</span> son obligatorios.
              </div>
              <div class="row">
                <div class="col-md-6">
                  <div class="mb-3">
                    <label for="nombrePersona" class="form-label fw-medium">Nombre <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="nombrePersona" value="<%= puesto.NombrePersona || 'No disponible' %>" readonly>
                    <small class="text-muted">Su nombre registrado en el sistema</small>
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="mb-3">
                    <label for="areaSolicitante" class="form-label fw-medium">Área <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="areaSolicitante" value="<%= puesto.unidad || 'Sin Área' %>" readonly>
                    <small class="text-muted">El departamento donde trabaja</small>
                  </div>
                </div>
              </div>
              <div class="mb-3 bg-light p-2 rounded">
                <div class="row">
                  <div class="col-md-6">
                    <label class="form-label fw-medium">Días Disponibles</label>
                    <div class="d-flex align-items-center">
                      <span class="fs-5 fw-bold text-primary me-2" id="diasDisponiblesDisplay"><%= diasDisponibles ? diasDisponibles.total : '0' %></span>
                      <span class="text-muted">días restantes</span>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <label class="form-label fw-medium">Días Solicitados</label>
                    <div class="d-flex align-items-center">
                      <span class="fs-5 fw-bold text-secondary" id="diasSolicitadosDisplay">0</span>
                      <span class="text-muted ms-2">días</span>
                    </div>
                  </div>
                </div>
              </div>
              <div class="row g-3 mb-3">
                <div class="col-md-6">
                  <label for="fechaInicio" class="form-label fw-medium">Fecha Inicio <span class="text-danger">*</span></label>
                  <input type="date" class="form-control" id="fechaInicio" required>
                  <small class="text-muted">Primer día de sus vacaciones</small>
                </div>
                <div class="col-md-6">
                  <label for="fechaFin" class="form-label fw-medium">Fecha Fin <span class="text-danger">*</span></label>
                  <input type="date" class="form-control" id="fechaFin" required>
                  <small class="text-muted">Último día de sus vacaciones</small>
                </div>
              </div>
              <div class="row g-3 mb-3">
                <div class="col-md-6">
                  <label for="totalDias" class="form-label fw-medium">Total Días</label>
                  <input type="text" class="form-control" id="totalDias" readonly>
                  <small class="text-muted">Días laborables calculados automáticamente</small>
                </div>
                <div class="col-md-6">
                  <label for="fechaReincorporacion" class="form-label fw-medium">Fecha Reincorporación</label>
                  <input type="date" class="form-control" id="fechaReincorporacion" readonly>
                  <small class="text-muted">Día en que regresará al trabajo</small>
                </div>
              </div>
              <div class="mb-3">
                <label for="observaciones" class="form-label fw-medium">Observaciones</label>
                <textarea class="form-control" id="observaciones" rows="3" placeholder="Escriba cualquier comentario adicional (opcional)"></textarea>
                <small class="text-muted">Notas o comentarios sobre su solicitud</small>
              </div>
              <div id="formError" class="alert alert-danger d-none"></div>
              <div class="alert alert-warning mt-3">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Importante:</strong> La solicitud debe tramitarse diez días antes de la fecha de inicio, mínimo cuatro días antes.
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-bs-toggle="tooltip" title="Cerrar sin guardar">Cancelar</button>
            <button type="submit" class="btn btn-institucional" form="vacacionesForm" data-bs-toggle="tooltip" title="Enviar solicitud de vacaciones">
              <i class="bi bi-send me-1"></i>Enviar Solicitud
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal de Detalles -->
    <div class="modal fade" id="detallesModal" tabindex="-1" aria-labelledby="detallesModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="detallesModalLabel"><i class="bi bi-file-text me-2"></i>Detalles de la Solicitud</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
          </div>
          <div class="modal-body">
            <div class="row">
              <div class="col-md-6">
                <div class="card mb-3">
                  <div class="card-header bg-light">
                    <h6 class="mb-0"><i class="bi bi-person-lines-fill me-2"></i>Información del Solicitante</h6>
                  </div>
                  <div class="card-body">
                    <dl class="row mb-0">
                      <dt class="col-sm-4 fw-medium">Nombre:</dt>
                      <dd class="col-sm-8" id="detalleNombre">-</dd>
                      <dt class="col-sm-4 fw-medium">Área:</dt>
                      <dd class="col-sm-8" id="detalleArea">-</dd>
                      <dt class="col-sm-4 fw-medium">Fecha Solicitud:</dt>
                      <dd class="col-sm-8" id="detalleFechaSolicitud">-</dd>
                    </dl>
                  </div>
                </div>
              </div>
              <div class="col-md-6">
                <div class="card mb-3">
                  <div class="card-header bg-light">
                    <h6 class="mb-0"><i class="bi bi-calendar-range me-2"></i>Detalles de Vacaciones</h6>
                  </div>
                  <div class="card-body">
                    <dl class="row mb-0">
                      <dt class="col-sm-4 fw-medium">Periodo:</dt>
                      <dd class="col-sm-8" id="detallePeriodo">-</dd>
                      <dt class="col-sm-4 fw-medium">Reincorporación:</dt>
                      <dd class="col-sm-8" id="detalleFechaReincorporacion">-</dd>
                      <dt class="col-sm-4 fw-medium">Días:</dt>
                      <dd class="col-sm-8" id="detalleDias">-</dd>
                      <dt class="col-sm-4 fw-medium">Estado:</dt>
                      <dd class="col-sm-8" id="detalleEstado">-</dd>
                    </dl>
                  </div>
                </div>
              </div>
            </div>
            <div class="card">
              <div class="card-header bg-light">
                <h6 class="mb-0"><i class="bi bi-chat-left-text me-2"></i>Observaciones</h6>
              </div>
              <div class="card-body">
                <p id="detalleObservaciones" class="mb-0">-</p>
              </div>
            </div>
            <div id="comentariosRechazo" class="card mt-3 border-danger" style="display: none;">
              <div class="card-header bg-danger text-white">
                <h6 class="mb-0"><i class="bi bi-exclamation-triangle me-2"></i>Motivo de Rechazo</h6>
              </div>
              <div class="card-body">
                <p id="detalleComentariosRechazo" class="mb-0">-</p>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            <button type="button" class="btn btn-danger" id="cancelarSolicitudBtn" style="display: none;">
              <i class="bi bi-x-circle me-1"></i>Cancelar Solicitud
            </button>
            <button type="button" class="btn btn-primary" id="generatePDFBtn" style="display: none;">
              <i class="bi bi-file-pdf me-1"></i>Descargar PDF
            </button>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    // Datos de solicitudes
    const solicitudes = <%- JSON.stringify(solicitudes || []) %>;
    const { jsPDF } = window.jspdf;
    let currentSolicitud = null;

    // Inicializar tooltips
    document.addEventListener('DOMContentLoaded', initializeTooltips);

    // Función para inicializar tooltips
    function initializeTooltips() {
      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      tooltipTriggerList.map(el => new bootstrap.Tooltip(el));
    }

    // Actualizar días solicitados en el modal
    function updateDiasSolicitados() {
      const totalDiasInput = document.getElementById('totalDias');
      const diasSolicitadosDisplay = document.getElementById('diasSolicitadosDisplay');
      const dias = totalDiasInput.value || '0';
      diasSolicitadosDisplay.textContent = dias;
    }

    // Calcular total_dias excluyendo fines de semana
    function calcularTotalDias(fechaInicio, fechaFin) {
      try {
        if (!fechaInicio || !fechaFin) {
          return { dias: 0, error: 'Seleccione ambas fechas.' };
        }

        const inicio = new Date(fechaInicio);
        const fin = new Date(fechaFin);

        if (isNaN(inicio.getTime()) || isNaN(fin.getTime())) {
          return { dias: 0, error: 'Fechas inválidas.' };
        }
        if (inicio > fin) {
          return { dias: 0, error: 'La fecha de inicio debe ser anterior o igual a la fecha de fin.' };
        }

        let totalDias = 0;
        let currentDate = new Date(inicio);

        while (currentDate <= fin) {
          const diaSemana = currentDate.getDay();
          if (diaSemana !== 0 && diaSemana !== 6) {
            totalDias++;
          }
          currentDate.setDate(currentDate.getDate() + 1);
        }

        return {
          dias: totalDias,
          error: totalDias === 0 ? 'No se encontraron días laborables en el rango seleccionado.' : null
        };
      } catch (error) {
        console.error('Error en calcularTotalDias:', error);
        return { dias: 0, error: 'Error al calcular los días.' };
      }
    }

    // Calcular fecha_reincorporacion
    function calcularFechaReincorporacion(fechaFin) {
      try {
        if (!fechaFin) return '';

        const fin = new Date(fechaFin);
        if (isNaN(fin.getTime())) return '';

        let reincorporacion = new Date(fin);
        reincorporacion.setDate(fin.getDate() + 1);

        while (reincorporacion.getDay() === 0 || reincorporacion.getDay() === 6) {
          reincorporacion.setDate(reincorporacion.getDate() + 1);
        }

        return reincorporacion.toISOString().split('T')[0];
      } catch (error) {
        console.error('Error en calcularFechaReincorporacion:', error);
        return '';
      }
    }

    // Actualizar campos en tiempo real
    function setupDateInputs() {
      const fechaInicioInput = document.getElementById('fechaInicio');
      const fechaFinInput = document.getElementById('fechaFin');
      const totalDiasInput = document.getElementById('totalDias');
      const fechaReincorporacionInput = document.getElementById('fechaReincorporacion');
      const formError = document.getElementById('formError');

      function actualizarCampos() {
        const fechaInicio = fechaInicioInput.value;
        const fechaFin = fechaFinInput.value;

        if (fechaInicio && fechaFin) {
          const resultadoDias = calcularTotalDias(fechaInicio, fechaFin);
          const fechaReincorporacion = calcularFechaReincorporacion(fechaFin);

          totalDiasInput.value = resultadoDias.dias || '';
          document.getElementById('diasSolicitadosDisplay').textContent = resultadoDias.dias || '0';
          fechaReincorporacionInput.value = fechaReincorporacion || '';

          if (resultadoDias.error) {
            formError.textContent = resultadoDias.error;
            formError.classList.remove('d-none');
          } else {
            formError.classList.add('d-none');
          }
        } else {
          totalDiasInput.value = '';
          document.getElementById('diasSolicitadosDisplay').textContent = '0';
          fechaReincorporacionInput.value = '';
          formError.textContent = 'Por favor, seleccione ambas fechas.';
          formError.classList.remove('d-none');
        }
      }

      if (fechaInicioInput && fechaFinInput) {
        fechaInicioInput.addEventListener('change', actualizarCampos);
        fechaFinInput.addEventListener('change', actualizarCampos);
      }

      totalDiasInput.addEventListener('change', updateDiasSolicitados);
    }

    // Manejar envío del formulario
    function setupFormSubmission() {
      const form = document.getElementById('vacacionesForm');
      if (form) {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          const formError = document.getElementById('formError');
          formError.textContent = '';
          formError.classList.add('d-none');

          const nombrePersona = document.getElementById('nombrePersona').value;
          const fechaInicio = document.getElementById('fechaInicio').value;
          const fechaFin = document.getElementById('fechaFin').value;
          const observaciones = document.getElementById('observaciones').value;
          const totalDias = parseInt(document.getElementById('totalDias').value) || 0;
          const fechaReincorporacion = document.getElementById('fechaReincorporacion').value;
          const diasDisponibles = parseInt(document.getElementById('diasDisponiblesDisplay')?.textContent || '<%= diasDisponibles ? diasDisponibles.total : 0 %>');

          // Validaciones
          if (!nombrePersona) {
            formError.textContent = 'Error: No se pudo cargar el nombre del solicitante.';
            formError.classList.remove('d-none');
            return;
          }
          if (!fechaInicio || !fechaFin) {
            formError.textContent = 'Seleccione las fechas de inicio y fin.';
            formError.classList.remove('d-none');
            return;
          }
          if (new Date(fechaInicio) > new Date(fechaFin)) {
            formError.textContent = 'La fecha de inicio no puede ser posterior a la fecha de fin.';
            formError.classList.remove('d-none');
            return;
          }
          if (totalDias === 0) {
            formError.textContent = 'No se encontraron días laborables en el rango seleccionado.';
            formError.classList.remove('d-none');
            return;
          }
          if (totalDias > diasDisponibles) {
            formError.textContent = `No tiene suficientes días disponibles. Solicitó ${totalDias} días, pero solo tiene ${diasDisponibles}.`;
            formError.classList.remove('d-none');
            return;
          }

          // Confirmación
          Swal.fire({
            title: '¿Confirmar envío?',
            text: `Solicitará ${totalDias} días de vacaciones. ¿Desea continuar?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Sí, enviar',
            cancelButtonText: 'Cancelar'
          }).then(async (result) => {
            if (result.isConfirmed) {
              const data = {
                nombrePersona,
                fecha_inicio: fechaInicio,
                fecha_fin: fechaFin,
                observaciones,
                fecha_reincorporacion: fechaReincorporacion,
                total_dias: totalDias
              };

              try {
                const response = await fetch('/solicitud', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                  Swal.fire({
                    icon: 'success',
                    title: '¡Solicitud enviada!',
                    html: `
                      <p>Su solicitud de vacaciones ha sido registrada.</p>
                      <div class="alert alert-info mt-3">
                        <i class="bi bi-info-circle me-2"></i>
                        Se ha enviado un correo a su jefe inmediato.
                      </div>
                    `,
                    timer: 5000,
                    showConfirmButton: true
                  }).then(() => location.reload());
                } else {
                  Swal.fire({
                    icon: 'error',
                    title: 'Error al enviar',
                    text: result.error || 'No se pudo procesar la solicitud.'
                  });
                }
              } catch (error) {
                console.error('Error al enviar solicitud:', error);
                Swal.fire({
                  icon: 'error',
                  title: 'Error de conexión',
                  text: 'No se pudo conectar con el servidor.'
                });
              }
            }
          });
        });
      }
    }

    // Cancelar una solicitud pendiente
    async function cancelarSolicitud(id) {
      Swal.fire({
        title: '¿Cancelar esta solicitud?',
        text: "Esta acción no se puede deshacer.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Sí, cancelar',
        cancelButtonText: 'No, mantener'
      }).then(async (result) => {
        if (result.isConfirmed) {
          try {
            const response = await fetch(`/cancelar-solicitud/${id}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();

            if (response.ok) {
              Swal.fire({
                icon: 'success',
                title: 'Solicitud cancelada',
                text: 'La solicitud ha sido cancelada.',
                timer: 3000,
                showConfirmButton: false
              }).then(() => location.reload());
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error al cancelar',
                text: result.error || 'No se pudo cancelar la solicitud.'
              });
            }
          } catch (error) {
            console.error('Error al cancelar solicitud:', error);
            Swal.fire({
              icon: 'error',
              title: 'Error de conexión',
              text: 'No se pudo conectar con el servidor.'
            });
          }
        }
      });
    }

    // Mostrar detalles de una solicitud
    function setupDetailsButtons() {
      document.querySelectorAll('.detalles-btn').forEach(button => {
        button.addEventListener('click', () => {
          const id = button.dataset.id;
          const solicitud = solicitudes.find(s => s.id == id);

          if (solicitud) {
            currentSolicitud = solicitud;

            document.getElementById('detalleNombre').textContent = solicitud.nombre || 'No disponible';
            document.getElementById('detalleArea').textContent = solicitud.area_solicitante || 'No disponible';
            document.getElementById('detalleFechaSolicitud').textContent = solicitud.fecha_solicitud ? new Date(solicitud.fecha_solicitud).toLocaleDateString('es-ES') : 'No disponible';

            const periodo = `${solicitud.fecha_inicio ? new Date(solicitud.fecha_inicio).toLocaleDateString('es-ES') : 'No disponible'} - ${solicitud.fecha_fin ? new Date(solicitud.fecha_fin).toLocaleDateString('es-ES') : 'No disponible'}`;
            document.getElementById('detallePeriodo').textContent = periodo;

            document.getElementById('detalleFechaReincorporacion').textContent = solicitud.fecha_reincorporacion ? new Date(solicitud.fecha_reincorporacion).toLocaleDateString('es-ES') : 'No disponible';
            document.getElementById('detalleDias').textContent = solicitud.total_dias || '0';

            let estadoBadge = '';
            if (solicitud.estado === 'Aprobado') {
              estadoBadge = `<span class="badge badge-success">Aprobado</span>`;
            } else if (solicitud.estado === 'Rechazado') {
              estadoBadge = `<span class="badge badge-danger">Rechazado</span>`;
            } else if (solicitud.estado === 'Pendiente') {
              estadoBadge = `<span class="badge badge-warning">Pendiente</span>`;
            } else {
              estadoBadge = `<span class="badge badge-info">${solicitud.estado || 'Desconocido'}</span>`;
            }
            document.getElementById('detalleEstado').innerHTML = estadoBadge;

            document.getElementById('detalleObservaciones').textContent = solicitud.observaciones || 'Sin observaciones';

            if (solicitud.estado === 'Rechazado' && solicitud.comentarios_rechazo) {
              document.getElementById('comentariosRechazo').style.display = 'block';
              document.getElementById('detalleComentariosRechazo').textContent = solicitud.comentarios_rechazo;
            } else {
              document.getElementById('comentariosRechazo').style.display = 'none';
            }

            const generatePDFBtn = document.getElementById('generatePDFBtn');
            const cancelarSolicitudBtn = document.getElementById('cancelarSolicitudBtn');
            if (solicitud.estado === 'Aprobado') {
              generatePDFBtn.style.display = 'block';
              cancelarSolicitudBtn.style.display = 'none';
            } else if (solicitud.estado === 'Pendiente') {
              generatePDFBtn.style.display = 'none';
              cancelarSolicitudBtn.style.display = 'block';
              cancelarSolicitudBtn.dataset.id = id;
            } else {
              generatePDFBtn.style.display = 'none';
              cancelarSolicitudBtn.style.display = 'none';
            }
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'No se encontraron los detalles de esta solicitud.'
            });
          }
        });
      });
    }

    // Generar el PDF
    function setupPDFGeneration() {
      document.getElementById('generatePDFBtn').addEventListener('click', () => {
        if (!currentSolicitud) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'No se encontraron los detalles de esta solicitud para generar el PDF.'
          });
          return;
        }

        const doc = new jsPDF();

        doc.setFontSize(12);
        doc.text('CONSUCOOP', 20, 20);
        doc.setFontSize(10);
        doc.text('SOLICITUD DE USO DE VACACIONES', 105, 20, { align: 'center' });
        doc.text('RRHH-FO-002', 180, 20);
        doc.text('Versión 1.0', 180, 25);

        doc.setLineWidth(0.5);
        doc.line(20, 30, 190, 30);
        doc.line(20, 40, 190, 40);

        doc.setFontSize(10);
        doc.text('FECHA:', 20, 38);
        doc.text(currentSolicitud.fecha_solicitud ? new Date(currentSolicitud.fecha_solicitud).toLocaleDateString('es-ES') : 'No disponible', 40, 38);

        doc.text('NOMBRE Y APELLIDO:', 20, 48);
        doc.text(currentSolicitud.nombre || 'No disponible', 50, 48);

        doc.text('DEPARTAMENTO:', 120, 48);
        doc.text(currentSolicitud.area_solicitante || 'No disponible', 150, 48);

        doc.line(20, 50, 190, 50);

        doc.text('FECHA DE VACACIONES:', 20, 58);
        doc.text('DESDE:', 50, 58);
        doc.text(currentSolicitud.fecha_inicio ? new Date(currentSolicitud.fecha_inicio).toLocaleDateString('es-ES') : 'No disponible', 70, 58);
        doc.text('HASTA:', 100, 58);
        doc.text(currentSolicitud.fecha_fin ? new Date(currentSolicitud.fecha_fin).toLocaleDateString('es-ES') : 'No disponible', 120, 58);

        doc.text('TOTAL DE DÍAS SOLICITADOS:', 20, 68);
        doc.text(currentSolicitud.total_dias ? currentSolicitud.total_dias.toString() : '0', 60, 68);

        doc.text('TOTAL DÍAS CONCEDIDOS:', 100, 68);
        doc.text(currentSolicitud.total_dias ? currentSolicitud.total_dias.toString() : '0', 140, 68);

        doc.line(20, 70, 190, 70);

        doc.text('FECHA DE REINCORPORACIÓN A SUS LABORES:', 20, 78);
        doc.text(currentSolicitud.fecha_reincorporacion ? new Date(currentSolicitud.fecha_reincorporacion).toLocaleDateString('es-ES') : 'No disponible', 90, 78);

        doc.text('CORRESPONDIENTES AL AÑO:', 120, 78);
        doc.text(currentSolicitud.fecha_inicio ? new Date(currentSolicitud.fecha_inicio).getFullYear().toString() : 'No disponible', 160, 78);

        doc.line(20, 80, 190, 80);

        doc.text('OBSERVACIONES:', 20, 88);
        doc.setFontSize(9);
        doc.text(currentSolicitud.observaciones || 'Sin observaciones', 50, 88, { maxWidth: 140 });

        doc.setLineWidth(0.2);
        for (let i = 0; i < 3; i++) {
          doc.line(20, 90 + i * 5, 190, 90 + i * 5);
        }

        doc.setFontSize(10);
        doc.line(20, 110, 90, 110);
        doc.line(120, 110, 190, 110);
        doc.text('Firma del Empleado', 20, 115);
        doc.text('V.B. Jefe Inmediato', 120, 115);
        doc.line(20, 120, 90, 120);
        doc.line(120, 120, 190, 120);
        doc.text('V.B. Gerente Recursos Humanos', 120, 125);

        doc.setFontSize(8);
        doc.text('NOTA:', 20, 135);
        doc.text('La presente solicitud debe tramitarse diez días antes de la fecha de inicio de sus vacaciones y mínimo cuatro días antes.', 30, 135, { maxWidth: 160 });

        doc.save(`Solicitud_Vacaciones_${currentSolicitud.id}.pdf`);
      });
    }

    // Manejo de filtros en histórico
    function setupFilters() {
      document.querySelectorAll('#filtroEstado .dropdown-item').forEach(item => {
        item.addEventListener('click', (e) => {
          e.preventDefault();
          const filter = item.dataset.filter;
          const rows = document.querySelectorAll('#historico-table tbody tr');
          const exportLink = document.getElementById('export-historico');

          rows.forEach(row => {
            const estado = row.dataset.estado;
            row.style.display = filter === 'all' || (filter === 'Aprobado' && (estado === 'Aprobado' || estado === 'Aprobado por Jefe')) || filter === estado ? '' : 'none';
          });

          exportLink.href = `/export-index?type=historico${filter !== 'all' ? '&estado=' + filter : ''}`;
        });
      });
    }

    // Manejar búsqueda en histórico con debounce
    function setupSearch() {
      let searchTimeout;
      document.getElementById('searchHistorico').addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          const searchTerm = this.value.toLowerCase();
          const rows = document.querySelectorAll('#historico-table tbody tr');
          rows.forEach(row => {
            const searchText = row.dataset.search;
            row.style.display = searchText.includes(searchTerm) ? '' : 'none';
          });
        }, 300);
      });
    }

    // Cambiar visibilidad de botones de exportación al cambiar pestañas
    function setupTabExport() {
      document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
        tab.addEventListener('shown.bs.tab', event => {
          const target = event.target.getAttribute('data-bs-target');
          document.querySelectorAll('.tab-export-btn').forEach(btn => {
            btn.classList.remove('active');
          });

          if (target === '#pendientes') {
            document.getElementById('pendientes-export').classList.add('active');
          } else if (target === '#historico') {
            document.getElementById('historico-export').classList.add('active');
          }
        });
      });
    }

    // Manejar botón de PDF y cancelar en tabla
    function setupTableActions() {
      document.querySelectorAll('.pdf-btn').forEach(button => {
        button.addEventListener('click', () => {
          const id = button.dataset.id;
          const solicitud = solicitudes.find(s => s.id == id);

          if (solicitud) {
            currentSolicitud = solicitud;
            document.getElementById('generatePDFBtn').click();
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'No se encontraron los detalles de esta solicitud para generar el PDF.'
            });
          }
        });
      });

      document.querySelectorAll('.cancelar-btn').forEach(button => {
        button.addEventListener('click', () => {
          const id = button.dataset.id;
          cancelarSolicitud(id);
        });
      });

      document.getElementById('cancelarSolicitudBtn').addEventListener('click', function() {
        const id = this.dataset.id;
        cancelarSolicitud(id);
      });
    }

    // Inicializar todas las funcionalidades
    document.addEventListener('DOMContentLoaded', () => {
      setupDateInputs();
      setupFormSubmission();
      setupDetailsButtons();
      setupPDFGeneration();
      setupFilters();
      setupSearch();
      setupTabExport();
      setupTableActions();
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>